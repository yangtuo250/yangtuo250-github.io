{"meta":{"title":"yangtuo250's blog","subtitle":"yangtuo250's blog","description":"yangtuo250 personal blog","author":"yangtuo250","url":"https://yangtuo250.github.io","root":"/"},"pages":[],"posts":[{"title":"statistics1","slug":"statistics1","date":"2019-11-09T15:17:43.000Z","updated":"2019-11-09T09:59:32.949Z","comments":true,"path":"2019/11/09/statistics1/","link":"","permalink":"https://yangtuo250.github.io/2019/11/09/statistics1/","excerpt":"","text":"Problem 1 扑克牌问题有一副扑克牌，除去俩王剩52张，从中随机抽取一张，并将这张牌花色记为$ X $。再从中取出一张牌，花色记为$ Y $。求$ X == Y $的概率。","categories":[{"name":"Statistics","slug":"Statistics","permalink":"https://yangtuo250.github.io/categories/Statistics/"}],"tags":[{"name":"statistics","slug":"statistics","permalink":"https://yangtuo250.github.io/tags/statistics/"},{"name":"math","slug":"math","permalink":"https://yangtuo250.github.io/tags/math/"}]},{"title":"Tensorboard","slug":"tensorboard","date":"2019-10-30T23:36:58.000Z","updated":"2019-10-30T15:43:20.047Z","comments":true,"path":"2019/10/31/tensorboard/","link":"","permalink":"https://yangtuo250.github.io/2019/10/31/tensorboard/","excerpt":"","text":"mark for detail usage 示例","categories":[{"name":"Tensorflow","slug":"Tensorflow","permalink":"https://yangtuo250.github.io/categories/Tensorflow/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://yangtuo250.github.io/tags/Python/"},{"name":"Tensorflow","slug":"Tensorflow","permalink":"https://yangtuo250.github.io/tags/Tensorflow/"},{"name":"Tensorboard","slug":"Tensorboard","permalink":"https://yangtuo250.github.io/tags/Tensorboard/"},{"name":"visualization","slug":"visualization","permalink":"https://yangtuo250.github.io/tags/visualization/"}]},{"title":"Python subprocess.Popen 两种使用方式","slug":"Python-subprocess-Popen","date":"2019-10-23T22:19:34.000Z","updated":"2019-10-23T15:06:42.226Z","comments":true,"path":"2019/10/24/Python-subprocess-Popen/","link":"","permalink":"https://yangtuo250.github.io/2019/10/24/Python-subprocess-Popen/","excerpt":"","text":"需求是捕捉到另外一个程序的运行情况，获取错误信息1. 直接调用Popen123456789\"\"\"test.py\"\"\"import timeimport tensorflowfor i in range(3): print(\"sb subprocess\") time.sleep(2) 12345678910import subprocessresult = subprocess.Popen(\"python -u test.py\", shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)while 1: err = result.stderr.readline() print(err) # if Traceback in one line of stderr, then print rest errors all if \"Traceback\" in err: print(result.stderr.readlines()) 直接调用Popen可以异步等待result生成 2. 使用Popen.communicate()123456import subprocessresult = subprocess.Popen(\"python -u test.py\", shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE).communicate()if \"Traceback\" in result[1].decode(): print(result[1].decode()) 使用Popen的communicate()方法，会阻塞在result语句。 生成的result是一个二元tupple，（stdout, stderr）","categories":[{"name":"Python","slug":"Python","permalink":"https://yangtuo250.github.io/categories/Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://yangtuo250.github.io/tags/Python/"},{"name":"subprocess","slug":"subprocess","permalink":"https://yangtuo250.github.io/tags/subprocess/"}]}]}